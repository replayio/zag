name: E2E Test
on: 
  schedule:
    - cron: '0 0 * * *'
  push:
  workflow_dispatch:

env:
  CI: true

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  # cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

jobs:
  record:
    timeout-minutes: 30
    outputs:
      recordDuration: ${{steps.end.outputs.recordDuration}}
      uploadDuration: ${{steps.end.outputs.uploadDuration}}

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install
        uses: ./.github/composite-actions/install

      - name: Install Playwright
        run: npx playwright install --with-deps && npx @replayio/playwright install

      - name: Set test start
        if: always()
        id: recordStart
        run: echo "time=`date +%s`" >> $GITHUB_OUTPUT

      - name: Run your tests
        run: pnpm e2e-react-replay
        env:
          RECORD_REPLAY_TEST_METRICS: 1
          RECORD_REPLAY_WEBHOOK_URL: ${{ secrets.RECORD_REPLAY_WEBHOOK_URL }}

      - name: Set upload start
        if: always()
        id: uploadStart
        run: echo "time=`date +%s`" >> $GITHUB_OUTPUT

      - name: Upload replays
        if: ${{ always() }}
        uses: replayio/action-upload@v0.4.3
        with:
          public: true
          api-key: rwk_zc9H1fCMI0B9mMJxY8wYE5vQOQ2FEnBu9ohGb5OMH10
      - name: Set duration in output
        id: end
        if: always()
        run: | 
          echo "recordDuration=$((${{ steps.uploadStart.outputs.time }} - ${{ steps.recordStart.outputs.time }}))" >> $GITHUB_OUTPUT
          echo "uploadDuration=$((`date +%s` - ${{ steps.uploadStart.outputs.time }}))" >> $GITHUB_OUTPUT

  no-record:
    timeout-minutes: 30
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install
        uses: ./.github/composite-actions/install

      - name: Install Playwright
        run: npx playwright install --with-deps && npx @replayio/playwright install

      - name: Run your tests
        run: pnpm e2e-react-replay
        env:
          RECORD_REPLAY_NO_RECORD: 1
          RECORD_REPLAY_TEST_METRICS: 1
          RECORD_REPLAY_WEBHOOK_URL: ${{ secrets.RECORD_REPLAY_WEBHOOK_URL }}
  original:
    timeout-minutes: 30
    runs-on: ubuntu-latest
    outputs:
     duration: ${{steps.end.outputs.duration}}
    steps:
      - uses: actions/checkout@v3

      - name: Install
        uses: ./.github/composite-actions/install

      - name: Install Playwright
        run: npx playwright install --with-deps
      - name: Set test start
        if: always()
        id: start
        run: echo "time=`date +%s`" >> $GITHUB_OUTPUT

      - name: Run your tests
        run: pnpm e2e-react
      - name: Set duration in output
        if: always()
        id: end
        run: echo "duration=$((`date +%s` - ${{ steps.start.outputs.time }}))" >> $GITHUB_OUTPUT

  upload-benchmarks:
    name: Upload benchmarks
    runs-on: ubuntu-latest
    needs: [record, original]
    if: always()
    steps:
      - run: |
          echo "Original Duration: ${{ needs.original.outputs.duration }}"
          echo "Record Duration: ${{ needs.record.outputs.recordDuration }}"
          echo "Upload Duration: ${{ needs.record.outputs.uploadDuration }}"
      - name: Fetch API Data ðŸ“¦
        uses: JamesIves/fetch-api-data-action@v2
        with:
          endpoint: "https://telemetry.replay.io"
          configuration: '{ "method": "POST", "body": {"event": "Webhook", "source": "metrics", "name": "action-finished", "project": "zag", "originalDuration": "${{ needs.original.outputs.duration }}", "recordDuration": "${{ needs.record.outputs.recordDuration }}", "uploadDuration": "${{ needs.record.outputs.uploadDuration }}"} }'
